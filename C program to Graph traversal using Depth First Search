#include <stdio.h>

int main() {
    int graph[10][10], visited[10], stack[10];
    int n, i, j, start, top = -1;

    // Input number of vertices
    printf("Enter number of vertices: ");
    scanf("%d", &n);

    // Input adjacency matrix
    printf("Enter adjacency matrix:\n");
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            scanf("%d", &graph[i][j]);
        }
    }

    // Initialize visited array
    for (i = 0; i < n; i++) {
        visited[i] = 0;
    }

    // Input starting vertex
    printf("Enter starting vertex (0 to %d): ", n - 1);
    scanf("%d", &start);

    // DFS Logic
    stack[++top] = start;

    printf("DFS Traversal Order: ");

    while (top >= 0) {
        int current = stack[top--];

        if (visited[current] == 0) {
            printf("%d ", current);
            visited[current] = 1;
        }

        for (j = n - 1; j >= 0; j--) {
            if (graph[current][j] == 1 && visited[j] == 0) {
                stack[++top] = j;
            }
        }
    }

    printf("\n");

    return 0;
}
